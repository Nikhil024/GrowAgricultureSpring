<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<beans:bean id="jsonReadService" class="com.grow.agriculture.serviceImpl.JsonReaderServiceImpl"/>
	<beans:bean id="registerFormBean" class="com.grow.agriculture.beans.RegisterFormBean"/>
	<beans:bean id="configurationService" class="com.grow.agriculture.serviceImpl.ConfigurationServiceImpl"/>
	<beans:bean id ="OTPValidator" class="com.grow.agriculture.form.validators.OTPValidator"/>
	<beans:bean id ="RegisterValidator" class="com.grow.agriculture.form.validators.RegisterValidator"/>
	<beans:bean id="gaRequest" class="com.grow.agriculture.controllers.GrowAgricultureRequest"/>
	<context:component-scan base-package="com.grow.agriculture.controllers" />
	
	<!-- namedParameterJdbcTemplate uses dataSource via constructor-injection -->
    <beans:bean id="jdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
	<beans:constructor-arg ref="dataSource" /> 
	</beans:bean>
 
    <!-- dataSource configuration -->
    <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<beans:property name="url" value="jdbc:oracle:thin:172.30.55.61:1521:XE"/>
		<beans:property name="username" value="nikhil"/>
		<beans:property name="password" value="admin"/>
    </beans:bean>
	
	<beans:bean id="UsersDao" class="com.grow.agriculture.daoImpl.UsersDaoImpl">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	
</beans:beans>